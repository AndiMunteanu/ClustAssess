% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stability-3-graph-clustering.R
\name{plot_k_resolution_corresp}
\alias{plot_k_resolution_corresp}
\title{Correspondence Between Resolution and the Number of Clusters}
\usage{
plot_k_resolution_corresp(
  clust_object,
  colour_information = c("ecc", "freq_k"),
  dodge_width = 0.3,
  summary_function = median,
  pt_size_range = c(1.5, 4)
)
}
\arguments{
\item{clust_object}{An object returned by the
`get_resolution_importance` method.}

\item{colour_information}{String that specifies the information type that will be
illustrated using gradient colour: either `freq_k` for the frequency of the number
of clusters or `ecc` for the Element-Centric Consistency
of the partitions obtained when the resolution is fixed.}

\item{dodge_width}{Used for adjusting the vertical position of the boxplot; the value
will be passed in the `width` argument of the `ggplot::position_dodge` method.}

\item{pt_size_range}{Indicates the minimum and the maximum size a point on the plot can have.}
}
\value{
A ggplot2 object. Different shapes of points indicate different
parameter configuration, while the color
illustrates the frequency of the most common partition or the Element-Centric Consistency
of the partitions. The frequency is calculated
as the fraction between the number of total appearances of partitions with a specific
number of clusters and resolution value and the number of
runs. The size
illustrates the frequency of the most common partition with *k* clusters relative to the
partitions obtained with the same resolution value and have *k* clusters.
}
\description{
For each configuration provided in the clust_object, display what
number of clusters appear for different values of the resolution parameters.
}
\examples{
set.seed(2021)
# create an artificial PCA embedding
pca_embedding <- matrix(runif(100 * 30), nrow = 100)
rownames(pca_embedding) <- as.character(1:100)
colnames(pca_embedding) <- paste0("PCA_", 1:30)

adj_matrix <- Seurat::FindNeighbors(pca_embedding,
  k.param = 10,
  nn.method = "rann",
  verbose = FALSE,
  compute.SNN = FALSE
)$nn
clust_diff_obj <- assess_clustering_stability(
  graph_adjacency_matrix = adj_matrix,
  resolution = c(0.5, 1),
  n_repetitions = 10,
  algorithm = 1:2,
  verbose = FALSE
)
plot_k_resolution_corresp(clust_diff_obj, "ecc")
plot_k_resolution_corresp(clust_diff_obj, "freq_k")
}
