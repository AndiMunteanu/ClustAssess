// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// update_connectivity_cpp
NumericMatrix update_connectivity_cpp(NumericMatrix connectivity, IntegerVector sampling_indices, IntegerVector cluster_assignments);
RcppExport SEXP _ClustAssess_update_connectivity_cpp(SEXP connectivitySEXP, SEXP sampling_indicesSEXP, SEXP cluster_assignmentsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type connectivity(connectivitySEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type sampling_indices(sampling_indicesSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type cluster_assignments(cluster_assignmentsSEXP);
    rcpp_result_gen = Rcpp::wrap(update_connectivity_cpp(connectivity, sampling_indices, cluster_assignments));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ClustAssess_update_connectivity_cpp", (DL_FUNC) &_ClustAssess_update_connectivity_cpp, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_ClustAssess(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
